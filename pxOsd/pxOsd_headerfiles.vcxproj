<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{E224B65F-4A1C-3521-9653-C10C756C700A}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>pxOsd_headerfiles</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd;D:\USD\OpenUSD-release\pxr\imaging\pxOsd;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd;D:\USD\OpenUSD-release\pxr\imaging\pxOsd;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd;D:\USD\OpenUSD-release\pxr\imaging\pxOsd;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd;D:\USD\OpenUSD-release\pxr\imaging\pxOsd;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\api.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying api.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/api.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/api.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying api.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/api.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/api.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying api.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/api.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/api.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying api.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/api.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/api.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\meshTopology.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying meshTopology.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopology.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopology.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying meshTopology.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopology.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopology.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying meshTopology.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopology.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopology.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying meshTopology.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopology.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopology.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\meshTopologyValidation.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying meshTopologyValidation.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopologyValidation.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopologyValidation.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying meshTopologyValidation.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopologyValidation.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopologyValidation.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying meshTopologyValidation.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopologyValidation.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopologyValidation.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying meshTopologyValidation.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/meshTopologyValidation.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/meshTopologyValidation.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\refinerFactory.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying refinerFactory.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/refinerFactory.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/refinerFactory.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying refinerFactory.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/refinerFactory.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/refinerFactory.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying refinerFactory.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/refinerFactory.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/refinerFactory.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying refinerFactory.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/refinerFactory.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/refinerFactory.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\subdivTags.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying subdivTags.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/subdivTags.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/subdivTags.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying subdivTags.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/subdivTags.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/subdivTags.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying subdivTags.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/subdivTags.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/subdivTags.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying subdivTags.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/subdivTags.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/subdivTags.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\tokens.h">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copying tokens.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/tokens.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/tokens.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copying tokens.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/tokens.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/tokens.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copying tokens.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/tokens.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/tokens.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copying tokens.h ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/include/pxr/imaging/pxOsd
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -Dinfile=D:/USD/OpenUSD-release/pxr/imaging/pxOsd/tokens.h -Doutfile=D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release//include/pxr/imaging/pxOsd/tokens.h -P D:/USD/OpenUSD-release/cmake/macros/copyHeaderForBuild.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\CMakeFiles\5ee0375e1577c505faf488849989fa57\pxOsd_headerfiles.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\pxOsd_headerfiles</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\pxOsd_headerfiles</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\pxOsd_headerfiles</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\api.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopology.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\meshTopologyValidation.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\refinerFactory.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\subdivTags.h;D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\include\pxr\imaging\pxOsd\tokens.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\pxOsd_headerfiles</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\USD\OpenUSD-release\pxr\imaging\pxOsd\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/USD/OpenUSD-release/pxr/imaging/pxOsd/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/USD/OpenUSD-release -BD:/USD/OpenUSD-DebugBuild/build/OpenUSD-release --check-stamp-file D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/pxr/imaging/pxOsd/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/USD/OpenUSD-release/pxr/imaging/pxOsd/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/USD/OpenUSD-release -BD:/USD/OpenUSD-DebugBuild/build/OpenUSD-release --check-stamp-file D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/pxr/imaging/pxOsd/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/USD/OpenUSD-release/pxr/imaging/pxOsd/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/USD/OpenUSD-release -BD:/USD/OpenUSD-DebugBuild/build/OpenUSD-release --check-stamp-file D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/pxr/imaging/pxOsd/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/USD/OpenUSD-release/pxr/imaging/pxOsd/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/USD/OpenUSD-release -BD:/USD/OpenUSD-DebugBuild/build/OpenUSD-release --check-stamp-file D:/USD/OpenUSD-DebugBuild/build/OpenUSD-release/pxr/imaging/pxOsd/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\pxr\imaging\pxOsd\CMakeFiles\pxOsd_headerfiles">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\USD\OpenUSD-DebugBuild\build\OpenUSD-release\ZERO_CHECK.vcxproj">
      <Project>{134F7FF2-6E65-30F7-9D01-1D61177F2C11}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>