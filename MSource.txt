■Volume

■UsdSkel
●レイヤーの構築処理
・関数化
・必要な情報
 -SkelRoot
 -Mesh
 -Skelton
 -SkelAnimation


■FileFormatPlugin
## Translator
```
// レイヤーの構築
SdfLayerRefPtr layer = SdfLayer::CreateAnonymous(".usda");

// ステージの構築
UsdStageRefPtr stage = UsdStage::Open(layer);

// Meshの定義
UsdGeomMesh mesh = UsdGeomMesh::Define(stage, SdfPath("/" + group.name));

//pointsの座標をAttrに設定
VtVec3fArray usdPoints
mesh.GetPointsAttr().Set(usdPoints);

//各面の構成頂点数をAttributeに設定
VtArray<int> faceVertexCounts
mesh.GetFaceVertexCountsAttr().Set(faceVertexCounts);

//各面の構成頂点のインデックス値をAttributeに設定
VtArray<int> faceVertexCounts
mesh.GetFaceVertexIndicesAttr().Set(faceVertexIndices);

//UV情報設定の設定
UsdGeomPrimvar uvPrimVar = UsdGeomPrimvarsAPI(mesh).CreatePrimvar(
	TfToken("uv"), 
	SdfValueTypeNames->TexCoord2fArray,
	UsdGeomTokens->faceVarying
);
uvPrimVar.GetAttr().Set(usdUVs);
uvPrimVar.CreateIndicesAttr().Set(faceUVIndices);

//Extent値をAttributeに設定
VtVec3fArray extentArray(2);
mesh.GetExtentAttr().Set(extentArray);
```


■UsdTutorial
## メッシュの構築
```
mesh = UsdGeom.Mesh.Define(stage, path)

# Points
vList = []
vList.append((-1, 0, 0))
vList.append(( 0, 0, 0))
vList.append(( 1, 0, 0))
vList.append((-1, 1, 0))
vList.append(( 0, 1, 0))
vList.append(( 1, 1, 0))
mesh.CreatePointsAttr(vList)

# FaceVertexCounts
fList = [] 
fList.append(4)
fList.append(4)
mesh.CreateFaceVertexCountsAttr(fList)

# FaceVertexIndices
fList = []
fList.extend((0, 1, 4, 3))
fList.extend((1, 2, 5, 4))
mesh.CreateFaceVertexIndicesAttr(fList)

# DisplayColor
vList = []
vList.append((1, 0, 0))  # Red
vList.append((0, 1, 0))  # Green
vList.append((0, 0, 1))  # Blue
vList.append((1, 1, 0))  # Yellow
vList.append((1, 1, 1))  # White
vList.append((1, 0, 1))  # Magenta
primvar_api = UsdGeom.PrimvarsAPI(mesh)
primvar = primvar_api.CreatePrimvar('displayColor', Sdf.ValueTypeNames.Color3f, interpolation=UsdGeom.Tokens.varying)
primvar.GetAttr().Set(vList)

# DoubleSided
mesh.CreateDoubleSidedAttr(False)
```

## シェーダーの構築
```
shader = UsdShade.Shader.Define(stage, path)
//シェーダータイプを設定する
shader.CreateIdAttr('UsdPreviewSurface')
//各々の値を設定する
shader.CreateInput('metallic', Sdf.ValueTypeNames.Float).Set(0.0)
shader.CreateInput('roughness', Sdf.ValueTypeNames.Float).Set(0.4)
shader.CreateInput('diffuseColor', Sdf.ValueTypeNames.Color3f).Set(Gf.Vec3f(1, 0, 1))
shader.CreateInput('opacity', Sdf.ValueTypeNames.Float).Set(1)
```

## マテリアルの設定
```
material = UsdShade.Material.Define(stage, path)
//マテリアルのサーフェス出力を作成
material.CreateSurfaceOutput()
//シェーダーをマテリアルに接続
material.GetSurfaceOutput().ConnectToSource(shader.ConnectableAPI(), 'surface')
```
